
1.- nest g mo modules/nameModule
2.- cd src/modules/nameModule
3.- entrar al modulo y correr el comando mkdir -p domain/interfaces domain/models domain/repositories domain/services infrastructure/commands infrastructure/controllers infrastructure/entities infrastructure/repositories
4.- crear el interface del "modelo-entidad base" en domain/interfaces y si es requerido extender de lib/abstracts/base (BaseEntity)
5.- crear entidad en infrastructure/entities e implementar del interface de domain/interfaces
6.- crear modelo en domain/models e implementar del interface de domain/interfaces
7.- crear interface con métodos a trabajar con db en domain/repositories
8.- crear e implementar repositorio en infrastructure/repositories (domain/repositories ->Interface)
9.- en módulo creado relacionar providers
	[{
	   provide: INameDatabaseRepository,
	   useClass: DatabaseNameRepository,
	}]
10.- crear servicio en módulo: nest g s modules/nameModule/domain/services/nameService --no-spec --flat
11.- crear controlador en modulo: nest g co modules/nameModule/infrastructure/controllers/nameController --no-spec --flat
12.- importar en módulo entidad a typeorm
        - imports: [TypeOrmModule.forFeature([nameEntity])],
13.- Trabajar con servicio, comandos y controlador

*Servicio es el que se conecta al repositorio por medio de inyección de dependencias y tiene la lógica de negocio.
	 constructor(
    		@Inject(INameDatabaseRepository)
    		private readonly nameDatabaseRepository: INameDatabaseRepository,
  		) {}